<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <display-name>cnooc-workerAuthority</display-name>

    <!-- Spring监听器 是整个 spring 框架的入口， 会自动装载 应用程序根上下文的 配置文件；因为他实现了 ServletContextListener
       这个接口， 项目启动时，就会执行它实现的方法。该spring配置文件的位置由contextConfigLoaction指定 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 读取spring配置文件 即Spring的全局配置，这里配置数据源等一些全局Spring基本配置 dispatcherServlet可以继承自这里的配置 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:conf/spring/spring.xml,classpath:conf/spring/spring-mybatis.xml</param-value>
    </context-param>

    <!-- 设计路径变量值 -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>springmvc.root</param-value>
    </context-param>

    <!--&lt;!&ndash; 防止内存泄露监听器 &ndash;&gt;-->
    <!--<listener>-->
    <!--<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>-->
    <!--</listener>-->

    <!-- 设置Session超时时间 单位：分钟 -->
    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>

    <!-- Spring字符集过滤器 配置工程项目编码，没有配置可能会造成乱码 -->
    <filter>
        <filter-name>springEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>springEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 日志记录 -->
    <context-param>
        <!-- 日志配置文件路径 -->
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:conf/log4j.properties</param-value>
    </context-param>
    <context-param>
        <!-- 日志页面的刷新间隔 -->
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- springMVC核心配置 Servlet拦截器配置 -->
    <!-- 如果没有contextConfigLocation初始化参数，将会在classpath下寻找{servlet-name}-servlet.xml的配置文件 -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:conf/spring/spring-mvc.xml</param-value>
        </init-param>
        <!-- load-on-startup 值为 "1" 表示该 servlet (dispatcherServlet 也是一个 servlet)
            随 servlet 容器同时启动 -->
        <load-on-startup>1</load-on-startup>
        <!-- 为servlet或者filter设置启用异步支持 -->
        <async-supported>true</async-supported>
    </servlet>
    <!-- <url-pattern>/</url-pattern> 会匹配到/login这样的路径型url，不会匹配到模式为*.jsp这样的后缀型url -->
    <!-- <url-pattern>/*</url-pattern> 会匹配所有url：路径型的和后缀型的url(包括/login,*.jsp,*.js和*.html等) -->
    <!-- <url-pattern>*.action</url-pattern>只会拦截.action后缀的请求，这种配置不会影响静态资源的访问 -->
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/WEB-INF/html/welcome.html</welcome-file>
    </welcome-file-list>

    <!-- 错误跳转页面 -->
    <error-page>
        <!-- 路径不正确 -->
        <error-code>404</error-code>
        <location>/WEB-INF/errorPage/404.jsp</location>
    </error-page>
    <error-page>
        <!-- 没有访问权限，访问被禁止 -->
        <error-code>405</error-code>
        <location>/WEB-INF/errorPage/405.jsp</location>
    </error-page>
    <error-page>
        <!-- 内部错误 -->
        <error-code>500</error-code>
        <location>/WEB-INF/errorPage/500.jsp</location>
    </error-page>

</web-app>