<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

    <!-- 引入jdbc配置文件 使用placeJHolder加载应用程序配置文件-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>


    <!-- 引入注解,开启Spring的Annotation注解处理器 
    	 是对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。
    	 即解决了@Controller标识的类的bean的注入和使用。 -->
    <context:annotation-config/>


    <!-- 开启Spring的Bean自动扫描机制来查找与管理Bean实例 -->
    <context:component-scan base-package="com.cnooc.core"/>

    <!-- 密码加密bean -->
    <bean id="pwdEncoder" class="com.cnooc.core.utils.PwdEncoder">
        <property name="defaultSalt" value="*_*!"/>
    </bean>

    <!-- For hashing and salting user passwords -->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

    <!-- 业务层注入 注入Service层-->
    <bean id="staffInfoOperationService" class="com.cnooc.core.serviceImpl.StaffInfoOperationServiceImpl"/>

    <bean id="userService" class="com.cnooc.core.serviceImpl.UserServiceImpl"/>


</beans>